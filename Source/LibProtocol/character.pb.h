// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: character.proto

#ifndef PROTOBUF_character_2eproto__INCLUDED
#define PROTOBUF_character_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_character_2eproto();
void protobuf_AssignDesc_character_2eproto();
void protobuf_ShutdownFile_character_2eproto();

class CounterInfo;
class MyCounters;
class MyUniqueID;
class RelInfo;
class Relation;
class UniqueIDItem;
class UserBinary;
class WsUser;

// ===================================================================

class CounterInfo : public ::google::protobuf::Message {
 public:
  CounterInfo();
  virtual ~CounterInfo();

  CounterInfo(const CounterInfo& from);

  inline CounterInfo& operator=(const CounterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CounterInfo& default_instance();

  void Swap(CounterInfo* other);

  // implements Message ----------------------------------------------

  inline CounterInfo* New() const { return New(NULL); }

  CounterInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CounterInfo& from);
  void MergeFrom(const CounterInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CounterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemid = 1;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 1;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // optional int32 itemval = 2;
  bool has_itemval() const;
  void clear_itemval();
  static const int kItemvalFieldNumber = 2;
  ::google::protobuf::int32 itemval() const;
  void set_itemval(::google::protobuf::int32 value);

  // optional int32 starttime = 3;
  bool has_starttime() const;
  void clear_starttime();
  static const int kStarttimeFieldNumber = 3;
  ::google::protobuf::int32 starttime() const;
  void set_starttime(::google::protobuf::int32 value);

  // optional int32 endtime = 4;
  bool has_endtime() const;
  void clear_endtime();
  static const int kEndtimeFieldNumber = 4;
  ::google::protobuf::int32 endtime() const;
  void set_endtime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobuf.CounterInfo)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_itemval();
  inline void clear_has_itemval();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 itemval_;
  ::google::protobuf::int32 starttime_;
  ::google::protobuf::int32 endtime_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static CounterInfo* default_instance_;
};
// -------------------------------------------------------------------

class MyCounters : public ::google::protobuf::Message {
 public:
  MyCounters();
  virtual ~MyCounters();

  MyCounters(const MyCounters& from);

  inline MyCounters& operator=(const MyCounters& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyCounters& default_instance();

  void Swap(MyCounters* other);

  // implements Message ----------------------------------------------

  inline MyCounters* New() const { return New(NULL); }

  MyCounters* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyCounters& from);
  void MergeFrom(const MyCounters& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyCounters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protobuf.CounterInfo counters = 1;
  int counters_size() const;
  void clear_counters();
  static const int kCountersFieldNumber = 1;
  const ::protobuf::CounterInfo& counters(int index) const;
  ::protobuf::CounterInfo* mutable_counters(int index);
  ::protobuf::CounterInfo* add_counters();
  ::google::protobuf::RepeatedPtrField< ::protobuf::CounterInfo >*
      mutable_counters();
  const ::google::protobuf::RepeatedPtrField< ::protobuf::CounterInfo >&
      counters() const;

  // @@protoc_insertion_point(class_scope:protobuf.MyCounters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::CounterInfo > counters_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static MyCounters* default_instance_;
};
// -------------------------------------------------------------------

class UniqueIDItem : public ::google::protobuf::Message {
 public:
  UniqueIDItem();
  virtual ~UniqueIDItem();

  UniqueIDItem(const UniqueIDItem& from);

  inline UniqueIDItem& operator=(const UniqueIDItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UniqueIDItem& default_instance();

  void Swap(UniqueIDItem* other);

  // implements Message ----------------------------------------------

  inline UniqueIDItem* New() const { return New(NULL); }

  UniqueIDItem* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UniqueIDItem& from);
  void MergeFrom(const UniqueIDItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UniqueIDItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemid = 1;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 1;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // optional int32 startid = 2;
  bool has_startid() const;
  void clear_startid();
  static const int kStartidFieldNumber = 2;
  ::google::protobuf::int32 startid() const;
  void set_startid(::google::protobuf::int32 value);

  // optional int32 endid = 3;
  bool has_endid() const;
  void clear_endid();
  static const int kEndidFieldNumber = 3;
  ::google::protobuf::int32 endid() const;
  void set_endid(::google::protobuf::int32 value);

  // optional int32 steplenght = 4;
  bool has_steplenght() const;
  void clear_steplenght();
  static const int kSteplenghtFieldNumber = 4;
  ::google::protobuf::int32 steplenght() const;
  void set_steplenght(::google::protobuf::int32 value);

  // optional int32 startcount = 5;
  bool has_startcount() const;
  void clear_startcount();
  static const int kStartcountFieldNumber = 5;
  ::google::protobuf::int32 startcount() const;
  void set_startcount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobuf.UniqueIDItem)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_startid();
  inline void clear_has_startid();
  inline void set_has_endid();
  inline void clear_has_endid();
  inline void set_has_steplenght();
  inline void clear_has_steplenght();
  inline void set_has_startcount();
  inline void clear_has_startcount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 startid_;
  ::google::protobuf::int32 endid_;
  ::google::protobuf::int32 steplenght_;
  ::google::protobuf::int32 startcount_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static UniqueIDItem* default_instance_;
};
// -------------------------------------------------------------------

class MyUniqueID : public ::google::protobuf::Message {
 public:
  MyUniqueID();
  virtual ~MyUniqueID();

  MyUniqueID(const MyUniqueID& from);

  inline MyUniqueID& operator=(const MyUniqueID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyUniqueID& default_instance();

  void Swap(MyUniqueID* other);

  // implements Message ----------------------------------------------

  inline MyUniqueID* New() const { return New(NULL); }

  MyUniqueID* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyUniqueID& from);
  void MergeFrom(const MyUniqueID& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyUniqueID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protobuf.UniqueIDItem uuids = 1;
  int uuids_size() const;
  void clear_uuids();
  static const int kUuidsFieldNumber = 1;
  const ::protobuf::UniqueIDItem& uuids(int index) const;
  ::protobuf::UniqueIDItem* mutable_uuids(int index);
  ::protobuf::UniqueIDItem* add_uuids();
  ::google::protobuf::RepeatedPtrField< ::protobuf::UniqueIDItem >*
      mutable_uuids();
  const ::google::protobuf::RepeatedPtrField< ::protobuf::UniqueIDItem >&
      uuids() const;

  // @@protoc_insertion_point(class_scope:protobuf.MyUniqueID)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::UniqueIDItem > uuids_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static MyUniqueID* default_instance_;
};
// -------------------------------------------------------------------

class RelInfo : public ::google::protobuf::Message {
 public:
  RelInfo();
  virtual ~RelInfo();

  RelInfo(const RelInfo& from);

  inline RelInfo& operator=(const RelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RelInfo& default_instance();

  void Swap(RelInfo* other);

  // implements Message ----------------------------------------------

  inline RelInfo* New() const { return New(NULL); }

  RelInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RelInfo& from);
  void MergeFrom(const RelInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RelInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // optional int32 rel = 2;
  bool has_rel() const;
  void clear_rel();
  static const int kRelFieldNumber = 2;
  ::google::protobuf::int32 rel() const;
  void set_rel(::google::protobuf::int32 value);

  // optional int32 createtime = 3;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreatetimeFieldNumber = 3;
  ::google::protobuf::int32 createtime() const;
  void set_createtime(::google::protobuf::int32 value);

  // optional int32 dealreltime = 4;
  bool has_dealreltime() const;
  void clear_dealreltime();
  static const int kDealreltimeFieldNumber = 4;
  ::google::protobuf::int32 dealreltime() const;
  void set_dealreltime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobuf.RelInfo)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_rel();
  inline void clear_has_rel();
  inline void set_has_createtime();
  inline void clear_has_createtime();
  inline void set_has_dealreltime();
  inline void clear_has_dealreltime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  ::google::protobuf::int32 rel_;
  ::google::protobuf::int32 createtime_;
  ::google::protobuf::int32 dealreltime_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static RelInfo* default_instance_;
};
// -------------------------------------------------------------------

class Relation : public ::google::protobuf::Message {
 public:
  Relation();
  virtual ~Relation();

  Relation(const Relation& from);

  inline Relation& operator=(const Relation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Relation& default_instance();

  void Swap(Relation* other);

  // implements Message ----------------------------------------------

  inline Relation* New() const { return New(NULL); }

  Relation* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Relation& from);
  void MergeFrom(const Relation& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Relation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .protobuf.RelInfo rels = 99;
  int rels_size() const;
  void clear_rels();
  static const int kRelsFieldNumber = 99;
  const ::protobuf::RelInfo& rels(int index) const;
  ::protobuf::RelInfo* mutable_rels(int index);
  ::protobuf::RelInfo* add_rels();
  ::google::protobuf::RepeatedPtrField< ::protobuf::RelInfo >*
      mutable_rels();
  const ::google::protobuf::RepeatedPtrField< ::protobuf::RelInfo >&
      rels() const;

  // @@protoc_insertion_point(class_scope:protobuf.Relation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::protobuf::RelInfo > rels_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static Relation* default_instance_;
};
// -------------------------------------------------------------------

class UserBinary : public ::google::protobuf::Message {
 public:
  UserBinary();
  virtual ~UserBinary();

  UserBinary(const UserBinary& from);

  inline UserBinary& operator=(const UserBinary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserBinary& default_instance();

  void Swap(UserBinary* other);

  // implements Message ----------------------------------------------

  inline UserBinary* New() const { return New(NULL); }

  UserBinary* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserBinary& from);
  void MergeFrom(const UserBinary& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UserBinary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .protobuf.MyCounters counters = 1;
  bool has_counters() const;
  void clear_counters();
  static const int kCountersFieldNumber = 1;
  const ::protobuf::MyCounters& counters() const;
  ::protobuf::MyCounters* mutable_counters();
  ::protobuf::MyCounters* release_counters();
  void set_allocated_counters(::protobuf::MyCounters* counters);

  // optional .protobuf.MyUniqueID uniqueid = 2;
  bool has_uniqueid() const;
  void clear_uniqueid();
  static const int kUniqueidFieldNumber = 2;
  const ::protobuf::MyUniqueID& uniqueid() const;
  ::protobuf::MyUniqueID* mutable_uniqueid();
  ::protobuf::MyUniqueID* release_uniqueid();
  void set_allocated_uniqueid(::protobuf::MyUniqueID* uniqueid);

  // optional .protobuf.Relation relation = 3;
  bool has_relation() const;
  void clear_relation();
  static const int kRelationFieldNumber = 3;
  const ::protobuf::Relation& relation() const;
  ::protobuf::Relation* mutable_relation();
  ::protobuf::Relation* release_relation();
  void set_allocated_relation(::protobuf::Relation* relation);

  // @@protoc_insertion_point(class_scope:protobuf.UserBinary)
 private:
  inline void set_has_counters();
  inline void clear_has_counters();
  inline void set_has_uniqueid();
  inline void clear_has_uniqueid();
  inline void set_has_relation();
  inline void clear_has_relation();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::protobuf::MyCounters* counters_;
  ::protobuf::MyUniqueID* uniqueid_;
  ::protobuf::Relation* relation_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static UserBinary* default_instance_;
};
// -------------------------------------------------------------------

class WsUser : public ::google::protobuf::Message {
 public:
  WsUser();
  virtual ~WsUser();

  WsUser(const WsUser& from);

  inline WsUser& operator=(const WsUser& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WsUser& default_instance();

  void Swap(WsUser* other);

  // implements Message ----------------------------------------------

  inline WsUser* New() const { return New(NULL); }

  WsUser* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WsUser& from);
  void MergeFrom(const WsUser& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WsUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 char_id = 1;
  bool has_char_id() const;
  void clear_char_id();
  static const int kCharIdFieldNumber = 1;
  ::google::protobuf::int64 char_id() const;
  void set_char_id(::google::protobuf::int64 value);

  // optional int64 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::int64 account_id() const;
  void set_account_id(::google::protobuf::int64 value);

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 level = 5;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:protobuf.WsUser)
 private:
  inline void set_has_char_id();
  inline void clear_has_char_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_level();
  inline void clear_has_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 char_id_;
  ::google::protobuf::int64 account_id_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 level_;
  friend void  protobuf_AddDesc_character_2eproto();
  friend void protobuf_AssignDesc_character_2eproto();
  friend void protobuf_ShutdownFile_character_2eproto();

  void InitAsDefaultInstance();
  static WsUser* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CounterInfo

// optional int32 itemid = 1;
inline bool CounterInfo::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CounterInfo::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CounterInfo::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CounterInfo::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 CounterInfo::itemid() const {
  // @@protoc_insertion_point(field_get:protobuf.CounterInfo.itemid)
  return itemid_;
}
inline void CounterInfo::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.CounterInfo.itemid)
}

// optional int32 itemval = 2;
inline bool CounterInfo::has_itemval() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CounterInfo::set_has_itemval() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CounterInfo::clear_has_itemval() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CounterInfo::clear_itemval() {
  itemval_ = 0;
  clear_has_itemval();
}
inline ::google::protobuf::int32 CounterInfo::itemval() const {
  // @@protoc_insertion_point(field_get:protobuf.CounterInfo.itemval)
  return itemval_;
}
inline void CounterInfo::set_itemval(::google::protobuf::int32 value) {
  set_has_itemval();
  itemval_ = value;
  // @@protoc_insertion_point(field_set:protobuf.CounterInfo.itemval)
}

// optional int32 starttime = 3;
inline bool CounterInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CounterInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CounterInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CounterInfo::clear_starttime() {
  starttime_ = 0;
  clear_has_starttime();
}
inline ::google::protobuf::int32 CounterInfo::starttime() const {
  // @@protoc_insertion_point(field_get:protobuf.CounterInfo.starttime)
  return starttime_;
}
inline void CounterInfo::set_starttime(::google::protobuf::int32 value) {
  set_has_starttime();
  starttime_ = value;
  // @@protoc_insertion_point(field_set:protobuf.CounterInfo.starttime)
}

// optional int32 endtime = 4;
inline bool CounterInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CounterInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CounterInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CounterInfo::clear_endtime() {
  endtime_ = 0;
  clear_has_endtime();
}
inline ::google::protobuf::int32 CounterInfo::endtime() const {
  // @@protoc_insertion_point(field_get:protobuf.CounterInfo.endtime)
  return endtime_;
}
inline void CounterInfo::set_endtime(::google::protobuf::int32 value) {
  set_has_endtime();
  endtime_ = value;
  // @@protoc_insertion_point(field_set:protobuf.CounterInfo.endtime)
}

// -------------------------------------------------------------------

// MyCounters

// repeated .protobuf.CounterInfo counters = 1;
inline int MyCounters::counters_size() const {
  return counters_.size();
}
inline void MyCounters::clear_counters() {
  counters_.Clear();
}
inline const ::protobuf::CounterInfo& MyCounters::counters(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MyCounters.counters)
  return counters_.Get(index);
}
inline ::protobuf::CounterInfo* MyCounters::mutable_counters(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.MyCounters.counters)
  return counters_.Mutable(index);
}
inline ::protobuf::CounterInfo* MyCounters::add_counters() {
  // @@protoc_insertion_point(field_add:protobuf.MyCounters.counters)
  return counters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::CounterInfo >*
MyCounters::mutable_counters() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MyCounters.counters)
  return &counters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::CounterInfo >&
MyCounters::counters() const {
  // @@protoc_insertion_point(field_list:protobuf.MyCounters.counters)
  return counters_;
}

// -------------------------------------------------------------------

// UniqueIDItem

// optional int32 itemid = 1;
inline bool UniqueIDItem::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UniqueIDItem::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UniqueIDItem::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UniqueIDItem::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 UniqueIDItem::itemid() const {
  // @@protoc_insertion_point(field_get:protobuf.UniqueIDItem.itemid)
  return itemid_;
}
inline void UniqueIDItem::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.UniqueIDItem.itemid)
}

// optional int32 startid = 2;
inline bool UniqueIDItem::has_startid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UniqueIDItem::set_has_startid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UniqueIDItem::clear_has_startid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UniqueIDItem::clear_startid() {
  startid_ = 0;
  clear_has_startid();
}
inline ::google::protobuf::int32 UniqueIDItem::startid() const {
  // @@protoc_insertion_point(field_get:protobuf.UniqueIDItem.startid)
  return startid_;
}
inline void UniqueIDItem::set_startid(::google::protobuf::int32 value) {
  set_has_startid();
  startid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.UniqueIDItem.startid)
}

// optional int32 endid = 3;
inline bool UniqueIDItem::has_endid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UniqueIDItem::set_has_endid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UniqueIDItem::clear_has_endid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UniqueIDItem::clear_endid() {
  endid_ = 0;
  clear_has_endid();
}
inline ::google::protobuf::int32 UniqueIDItem::endid() const {
  // @@protoc_insertion_point(field_get:protobuf.UniqueIDItem.endid)
  return endid_;
}
inline void UniqueIDItem::set_endid(::google::protobuf::int32 value) {
  set_has_endid();
  endid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.UniqueIDItem.endid)
}

// optional int32 steplenght = 4;
inline bool UniqueIDItem::has_steplenght() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UniqueIDItem::set_has_steplenght() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UniqueIDItem::clear_has_steplenght() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UniqueIDItem::clear_steplenght() {
  steplenght_ = 0;
  clear_has_steplenght();
}
inline ::google::protobuf::int32 UniqueIDItem::steplenght() const {
  // @@protoc_insertion_point(field_get:protobuf.UniqueIDItem.steplenght)
  return steplenght_;
}
inline void UniqueIDItem::set_steplenght(::google::protobuf::int32 value) {
  set_has_steplenght();
  steplenght_ = value;
  // @@protoc_insertion_point(field_set:protobuf.UniqueIDItem.steplenght)
}

// optional int32 startcount = 5;
inline bool UniqueIDItem::has_startcount() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UniqueIDItem::set_has_startcount() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UniqueIDItem::clear_has_startcount() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UniqueIDItem::clear_startcount() {
  startcount_ = 0;
  clear_has_startcount();
}
inline ::google::protobuf::int32 UniqueIDItem::startcount() const {
  // @@protoc_insertion_point(field_get:protobuf.UniqueIDItem.startcount)
  return startcount_;
}
inline void UniqueIDItem::set_startcount(::google::protobuf::int32 value) {
  set_has_startcount();
  startcount_ = value;
  // @@protoc_insertion_point(field_set:protobuf.UniqueIDItem.startcount)
}

// -------------------------------------------------------------------

// MyUniqueID

// repeated .protobuf.UniqueIDItem uuids = 1;
inline int MyUniqueID::uuids_size() const {
  return uuids_.size();
}
inline void MyUniqueID::clear_uuids() {
  uuids_.Clear();
}
inline const ::protobuf::UniqueIDItem& MyUniqueID::uuids(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.MyUniqueID.uuids)
  return uuids_.Get(index);
}
inline ::protobuf::UniqueIDItem* MyUniqueID::mutable_uuids(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.MyUniqueID.uuids)
  return uuids_.Mutable(index);
}
inline ::protobuf::UniqueIDItem* MyUniqueID::add_uuids() {
  // @@protoc_insertion_point(field_add:protobuf.MyUniqueID.uuids)
  return uuids_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::UniqueIDItem >*
MyUniqueID::mutable_uuids() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.MyUniqueID.uuids)
  return &uuids_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::UniqueIDItem >&
MyUniqueID::uuids() const {
  // @@protoc_insertion_point(field_list:protobuf.MyUniqueID.uuids)
  return uuids_;
}

// -------------------------------------------------------------------

// RelInfo

// optional int64 uid = 1;
inline bool RelInfo::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RelInfo::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RelInfo::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RelInfo::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 RelInfo::uid() const {
  // @@protoc_insertion_point(field_get:protobuf.RelInfo.uid)
  return uid_;
}
inline void RelInfo::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:protobuf.RelInfo.uid)
}

// optional int32 rel = 2;
inline bool RelInfo::has_rel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RelInfo::set_has_rel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RelInfo::clear_has_rel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RelInfo::clear_rel() {
  rel_ = 0;
  clear_has_rel();
}
inline ::google::protobuf::int32 RelInfo::rel() const {
  // @@protoc_insertion_point(field_get:protobuf.RelInfo.rel)
  return rel_;
}
inline void RelInfo::set_rel(::google::protobuf::int32 value) {
  set_has_rel();
  rel_ = value;
  // @@protoc_insertion_point(field_set:protobuf.RelInfo.rel)
}

// optional int32 createtime = 3;
inline bool RelInfo::has_createtime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RelInfo::set_has_createtime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RelInfo::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RelInfo::clear_createtime() {
  createtime_ = 0;
  clear_has_createtime();
}
inline ::google::protobuf::int32 RelInfo::createtime() const {
  // @@protoc_insertion_point(field_get:protobuf.RelInfo.createtime)
  return createtime_;
}
inline void RelInfo::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:protobuf.RelInfo.createtime)
}

// optional int32 dealreltime = 4;
inline bool RelInfo::has_dealreltime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RelInfo::set_has_dealreltime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RelInfo::clear_has_dealreltime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RelInfo::clear_dealreltime() {
  dealreltime_ = 0;
  clear_has_dealreltime();
}
inline ::google::protobuf::int32 RelInfo::dealreltime() const {
  // @@protoc_insertion_point(field_get:protobuf.RelInfo.dealreltime)
  return dealreltime_;
}
inline void RelInfo::set_dealreltime(::google::protobuf::int32 value) {
  set_has_dealreltime();
  dealreltime_ = value;
  // @@protoc_insertion_point(field_set:protobuf.RelInfo.dealreltime)
}

// -------------------------------------------------------------------

// Relation

// repeated .protobuf.RelInfo rels = 99;
inline int Relation::rels_size() const {
  return rels_.size();
}
inline void Relation::clear_rels() {
  rels_.Clear();
}
inline const ::protobuf::RelInfo& Relation::rels(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.Relation.rels)
  return rels_.Get(index);
}
inline ::protobuf::RelInfo* Relation::mutable_rels(int index) {
  // @@protoc_insertion_point(field_mutable:protobuf.Relation.rels)
  return rels_.Mutable(index);
}
inline ::protobuf::RelInfo* Relation::add_rels() {
  // @@protoc_insertion_point(field_add:protobuf.Relation.rels)
  return rels_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::protobuf::RelInfo >*
Relation::mutable_rels() {
  // @@protoc_insertion_point(field_mutable_list:protobuf.Relation.rels)
  return &rels_;
}
inline const ::google::protobuf::RepeatedPtrField< ::protobuf::RelInfo >&
Relation::rels() const {
  // @@protoc_insertion_point(field_list:protobuf.Relation.rels)
  return rels_;
}

// -------------------------------------------------------------------

// UserBinary

// optional .protobuf.MyCounters counters = 1;
inline bool UserBinary::has_counters() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserBinary::set_has_counters() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserBinary::clear_has_counters() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserBinary::clear_counters() {
  if (counters_ != NULL) counters_->::protobuf::MyCounters::Clear();
  clear_has_counters();
}
inline const ::protobuf::MyCounters& UserBinary::counters() const {
  // @@protoc_insertion_point(field_get:protobuf.UserBinary.counters)
  return counters_ != NULL ? *counters_ : *default_instance_->counters_;
}
inline ::protobuf::MyCounters* UserBinary::mutable_counters() {
  set_has_counters();
  if (counters_ == NULL) {
    counters_ = new ::protobuf::MyCounters;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.UserBinary.counters)
  return counters_;
}
inline ::protobuf::MyCounters* UserBinary::release_counters() {
  // @@protoc_insertion_point(field_release:protobuf.UserBinary.counters)
  clear_has_counters();
  ::protobuf::MyCounters* temp = counters_;
  counters_ = NULL;
  return temp;
}
inline void UserBinary::set_allocated_counters(::protobuf::MyCounters* counters) {
  delete counters_;
  counters_ = counters;
  if (counters) {
    set_has_counters();
  } else {
    clear_has_counters();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.UserBinary.counters)
}

// optional .protobuf.MyUniqueID uniqueid = 2;
inline bool UserBinary::has_uniqueid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UserBinary::set_has_uniqueid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UserBinary::clear_has_uniqueid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UserBinary::clear_uniqueid() {
  if (uniqueid_ != NULL) uniqueid_->::protobuf::MyUniqueID::Clear();
  clear_has_uniqueid();
}
inline const ::protobuf::MyUniqueID& UserBinary::uniqueid() const {
  // @@protoc_insertion_point(field_get:protobuf.UserBinary.uniqueid)
  return uniqueid_ != NULL ? *uniqueid_ : *default_instance_->uniqueid_;
}
inline ::protobuf::MyUniqueID* UserBinary::mutable_uniqueid() {
  set_has_uniqueid();
  if (uniqueid_ == NULL) {
    uniqueid_ = new ::protobuf::MyUniqueID;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.UserBinary.uniqueid)
  return uniqueid_;
}
inline ::protobuf::MyUniqueID* UserBinary::release_uniqueid() {
  // @@protoc_insertion_point(field_release:protobuf.UserBinary.uniqueid)
  clear_has_uniqueid();
  ::protobuf::MyUniqueID* temp = uniqueid_;
  uniqueid_ = NULL;
  return temp;
}
inline void UserBinary::set_allocated_uniqueid(::protobuf::MyUniqueID* uniqueid) {
  delete uniqueid_;
  uniqueid_ = uniqueid;
  if (uniqueid) {
    set_has_uniqueid();
  } else {
    clear_has_uniqueid();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.UserBinary.uniqueid)
}

// optional .protobuf.Relation relation = 3;
inline bool UserBinary::has_relation() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserBinary::set_has_relation() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserBinary::clear_has_relation() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserBinary::clear_relation() {
  if (relation_ != NULL) relation_->::protobuf::Relation::Clear();
  clear_has_relation();
}
inline const ::protobuf::Relation& UserBinary::relation() const {
  // @@protoc_insertion_point(field_get:protobuf.UserBinary.relation)
  return relation_ != NULL ? *relation_ : *default_instance_->relation_;
}
inline ::protobuf::Relation* UserBinary::mutable_relation() {
  set_has_relation();
  if (relation_ == NULL) {
    relation_ = new ::protobuf::Relation;
  }
  // @@protoc_insertion_point(field_mutable:protobuf.UserBinary.relation)
  return relation_;
}
inline ::protobuf::Relation* UserBinary::release_relation() {
  // @@protoc_insertion_point(field_release:protobuf.UserBinary.relation)
  clear_has_relation();
  ::protobuf::Relation* temp = relation_;
  relation_ = NULL;
  return temp;
}
inline void UserBinary::set_allocated_relation(::protobuf::Relation* relation) {
  delete relation_;
  relation_ = relation;
  if (relation) {
    set_has_relation();
  } else {
    clear_has_relation();
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.UserBinary.relation)
}

// -------------------------------------------------------------------

// WsUser

// optional int64 char_id = 1;
inline bool WsUser::has_char_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void WsUser::set_has_char_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void WsUser::clear_has_char_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void WsUser::clear_char_id() {
  char_id_ = GOOGLE_LONGLONG(0);
  clear_has_char_id();
}
inline ::google::protobuf::int64 WsUser::char_id() const {
  // @@protoc_insertion_point(field_get:protobuf.WsUser.char_id)
  return char_id_;
}
inline void WsUser::set_char_id(::google::protobuf::int64 value) {
  set_has_char_id();
  char_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.WsUser.char_id)
}

// optional int64 account_id = 2;
inline bool WsUser::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void WsUser::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void WsUser::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void WsUser::clear_account_id() {
  account_id_ = GOOGLE_LONGLONG(0);
  clear_has_account_id();
}
inline ::google::protobuf::int64 WsUser::account_id() const {
  // @@protoc_insertion_point(field_get:protobuf.WsUser.account_id)
  return account_id_;
}
inline void WsUser::set_account_id(::google::protobuf::int64 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:protobuf.WsUser.account_id)
}

// optional string name = 3;
inline bool WsUser::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void WsUser::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void WsUser::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void WsUser::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& WsUser::name() const {
  // @@protoc_insertion_point(field_get:protobuf.WsUser.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WsUser::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protobuf.WsUser.name)
}
inline void WsUser::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protobuf.WsUser.name)
}
inline void WsUser::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protobuf.WsUser.name)
}
inline ::std::string* WsUser::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:protobuf.WsUser.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WsUser::release_name() {
  // @@protoc_insertion_point(field_release:protobuf.WsUser.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WsUser::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:protobuf.WsUser.name)
}

// optional int32 type = 4;
inline bool WsUser::has_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void WsUser::set_has_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void WsUser::clear_has_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void WsUser::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 WsUser::type() const {
  // @@protoc_insertion_point(field_get:protobuf.WsUser.type)
  return type_;
}
inline void WsUser::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:protobuf.WsUser.type)
}

// optional int32 level = 5;
inline bool WsUser::has_level() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void WsUser::set_has_level() {
  _has_bits_[0] |= 0x00000010u;
}
inline void WsUser::clear_has_level() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void WsUser::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 WsUser::level() const {
  // @@protoc_insertion_point(field_get:protobuf.WsUser.level)
  return level_;
}
inline void WsUser::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:protobuf.WsUser.level)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_character_2eproto__INCLUDED
